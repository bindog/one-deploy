apiVersion: apps/v1
kind: Deployment
metadata:
  name: recommend-deployment
  labels:
    app: recommend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: recommend
  template:
    metadata:
      labels:
        app: recommend
    spec:
      initContainers:
      - name: download
        image: busybox
        imagePullPolicy: IfNotPresent
        env:
          - name: FILE_SERVER
            valueFrom:
              configMapKeyRef:
                name: ais-config
                key: file_server
          - name: NLP_PREFIX
            valueFrom:
              configMapKeyRef:
                name: ais-config
                key: nlp_prefix
          - name: MODEL_NAME
            value: "recommend"  # the folder name in http server
        command: ["wget", "-O", "/mnt/project/deploy.zip", "http://$(FILE_SERVER)/$(NLP_PREFIX)/$(MODEL_NAME)/?op=archive"]
        volumeMounts:
        - name: projectdir
          mountPath: "/mnt/project"
      - name: install
        image: busybox
        imagePullPolicy: IfNotPresent
        command: ["unzip", "-o", "/mnt/project/deploy.zip", "-d", "/mnt/project"]
        volumeMounts:
        - name: projectdir
          mountPath: "/mnt/project"
      containers:
      - name: recommend-j
        image: 192.168.4.99:8443/ai/dl-nlp-base-cpu:v1.0
        imagePullPolicy: IfNotPresent
        env:
          - name: CORTEX_API_SPEC
            value: "/mnt/project/api-spec.json"
        ports:
          - containerPort: 8888
        livenessProbe:
          httpGet:
            path: /
            port: 8888
            httpHeaders:
              - name: Content-Type
                value: application/json
          failureThreshold: 15
          periodSeconds: 60
        readinessProbe:
          httpGet:
            path: /
            port: 8888
            httpHeaders:
              - name: Content-Type
                value: application/json
          failureThreshold: 3
          periodSeconds: 60
        startupProbe:
          httpGet:
            path: /
            port: 8888
            httpHeaders:
              - name: Content-Type
                value: application/json
          initialDelaySeconds: 30
          failureThreshold: 50
          periodSeconds: 15
        volumeMounts:
        - name: workspacedir
          mountPath: "/mnt/workspace"
        - name: projectdir
          mountPath: "/mnt/project"
      volumes:
      - name: workspacedir
        emptyDir: {}
      - name: projectdir
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: recommend-service
spec:
  selector:
    app: recommend
  ports:
    - protocol: TCP
      port: 9999
      targetPort: 8888
